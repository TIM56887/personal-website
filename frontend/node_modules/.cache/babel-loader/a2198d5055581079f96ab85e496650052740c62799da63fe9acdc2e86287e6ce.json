{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nconst actions = {\n  sendComment(context, value) {\n    axios.post('/sendcomment', value).then(error => {\n      console.log('請求失敗', error.message);\n    });\n    context.dispatch('getComment');\n  },\n  getComment(context) {\n    axios.get('/getcomment').then(response => {\n      context.commit('GETCOMMENT', response.data);\n    }, error => {\n      console.log('請求失敗', error.message);\n    });\n  },\n  updateComment(context, value) {\n    console.log(value);\n    axios.post('/updatecomment', value).then(response => console.log(response));\n    context.commit('UPDATECOMMENT', value);\n  },\n  deleteComment(context, value) {\n    axios.post('/deletecomment', value).then(res => {\n      console.log(res);\n      context.commit('DELETECOMMENT', value.commentId);\n    });\n  }\n};\nconst mutations = {\n  SENDCOMMENT(state, value) {\n    state.comments.push(value);\n  },\n  GETCOMMENT(state, value) {\n    state.comments = value;\n  },\n  UPDATECOMMENT(state, value) {\n    let targetComment = state.comments.find(comment => comment.commentId === value.commentId);\n    targetComment.commentText = value.newValue;\n  },\n  DELETECOMMENT(state, value) {\n    let index = state.comments.findIndex(comment => comment.commentId === value);\n    console.log(index);\n    state.comments.splice(index, 1);\n  }\n};\nconst state = {\n  todo: [],\n  userstodo: [],\n  comments: []\n};\nconst store = new Vuex.Store({\n  actions,\n  mutations,\n  state\n});\nexport default store;","map":{"version":3,"names":["Vue","Vuex","axios","use","actions","sendComment","context","value","post","then","error","console","log","message","dispatch","getComment","get","response","commit","data","updateComment","deleteComment","res","commentId","mutations","SENDCOMMENT","state","comments","push","GETCOMMENT","UPDATECOMMENT","targetComment","find","comment","commentText","newValue","DELETECOMMENT","index","findIndex","splice","todo","userstodo","store","Store"],"sources":["C:/Users/User/Desktop/personalweb/my-portfolio/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from 'axios'\r\nVue.use(Vuex)\r\nconst actions = {\r\n    sendComment(context,value){\r\n        axios.post('/sendcomment',value).then(\r\n            error => {\r\n                console.log('請求失敗',error.message)\r\n            }\r\n        )\r\n        context.dispatch('getComment')\r\n\r\n    },\r\n    getComment(context){\r\n        axios.get('/getcomment').then(\r\n            response =>{\r\n                context.commit('GETCOMMENT',response.data)\r\n            },\r\n            error => {\r\n                console.log('請求失敗',error.message)\r\n            }\r\n        )\r\n    },\r\n    updateComment(context, value){\r\n        console.log(value)\r\n        axios.post('/updatecomment',value).then(\r\n            response => console.log(response)\r\n        );\r\n        context.commit('UPDATECOMMENT', value)\r\n        \r\n    },\r\n    deleteComment(context, value){\r\n        axios.post('/deletecomment', value)\r\n        .then(\r\n            res => {\r\n                console.log(res);\r\n                context.commit('DELETECOMMENT',value.commentId)\r\n            }\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mutations = {\r\n    SENDCOMMENT(state, value){\r\n        state.comments.push(value)\r\n    },\r\n    GETCOMMENT(state,value){\r\n        state.comments = value\r\n    },\r\n    UPDATECOMMENT(state,value){\r\n        let targetComment = state.comments.find( comment => comment.commentId === value.commentId)\r\n        targetComment.commentText = value.newValue\r\n    },\r\n    DELETECOMMENT(state,value){\r\n        let index = state.comments.findIndex(comment => comment.commentId === value)\r\n        console.log(index)\r\n        state.comments.splice(index, 1)\r\n    }\r\n    \r\n}\r\n\r\nconst state = {\r\n    todo:[],\r\n    userstodo:[],\r\n    comments:[]\r\n    \r\n}\r\n\r\n\r\nconst store = new Vuex.Store({\r\n    actions,\r\n    mutations,\r\n    state\r\n})\r\n\r\nexport default store"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}