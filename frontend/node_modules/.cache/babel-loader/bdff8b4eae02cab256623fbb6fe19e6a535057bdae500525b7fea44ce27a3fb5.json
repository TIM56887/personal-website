{"ast":null,"code":"export default {\n  name: 'SuggestTodoItem',\n  props: ['comment', 'currentUser'],\n  data() {\n    return {\n      isEditing: false,\n      editingvalue: \"\"\n    };\n  },\n  methods: {\n    // deletetodo(id){\n    //     this.$store.dispatch('deletetodo',id)\n    // },\n    // edittodo(todo){\n    //     this.isEditing = !this.isEditing\n    //     this.editingvalue = todo.task\n    //     this.$nextTick(() => {\n    //         this.$refs.editingInput.focus();\n    //     });\n    // },\n    // sendeditedtodo(e,todo){\n    //     if (todo.task !== e.target.value){\n    //         let content = e.target.value\n    //         let id = todo.id\n    //         this.isEditing=false\n    //         this.$store.dispatch('edittodo',{content,id})\n    //     }\n    //     this.isEditing=false\n    // },\n    editComment() {\n      this.isEditing = !this.isEditing;\n      this.editingvalue = this.comment.commentText;\n      this.$nextTick(() => {\n        this.$refs.editingInput.focus();\n      });\n    },\n    doneEdit() {\n      this.isEditing = false;\n      if (this.comment.commentText !== this.editingvalue) {\n        this.sendEditedComment();\n      }\n    },\n    sendEditedComment() {\n      const updateComment = {\n        commentId: this.comment.commentId,\n        newValue: this.editingvalue\n      };\n      this.$store.dispatch('updateComment', updateComment);\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","isEditing","editingvalue","methods","editComment","comment","commentText","$nextTick","$refs","editingInput","focus","doneEdit","sendEditedComment","updateComment","commentId","newValue","$store","dispatch"],"sources":["src/components/SuggestTodoItem.vue"],"sourcesContent":["<template>\r\n    <li class=\"container-fluid pb-1 px-0 border-bottom mt-4\">\r\n        <div class=\"row\">\r\n            <div class=\"col-1 overflow-hidden ps-4 d-flex justify-content-end p-0\">\r\n                <img :src=\"comment.pictureUrl\" alt=\"pf\" class=\"object-fit-fill border rounded-circle\">\r\n            </div>\r\n            <div class=\"col-11\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-between\">\r\n                        <div class=\"col-2 p-0\">\r\n                            <div class=\"user fw-semibold\">\r\n                                {{ comment.displayName }}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-3 p-0 text-secondary time text-end\">\r\n                            {{ comment.commentDate.slice(0,16).replace(\"T\",\" \") }}\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div v-show=\"!isEditing\" class=\"row textArea\">\r\n                        <pre class=\"comment\">{{ comment.commentText }}</pre>\r\n                    </div>\r\n                    <div v-show=\"isEditing\" class=\"row textArea\">\r\n                        <textarea \r\n                            ref=\"editingInput\" \r\n                            cols=\"30\" rows=\"5\" \r\n                            v-model=\"editingvalue\"\r\n                            @blur=\"doneEdit\"\r\n                            \r\n                            ></textarea>\r\n                    </div>\r\n                    <div class=\"row justify-content-end bottom-row \">\r\n                        <div  v-if=\"!isEditing\" @click=\"editComment\" class=\"col-1 text-end p-0\">                            \r\n                            <i class=\"bi bi-pencil-square editicon align-middle p-1\"></i>\r\n                        </div>\r\n                        <div v-if=\"!isEditing\" class=\"col-1 p-0 ms-2\">\r\n                            <i class=\"bi bi-trash3 deleteicon align-middle p-1\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"row justify-content-end bottom-row \">\r\n                        <div v-if=\"currentUser === comment.userId\" @click=\"editComment\" class=\"col-1 text-end p-0\">                            \r\n                            <i class=\"bi bi-pencil-square editicon align-middle p-1\"></i>\r\n                        </div>\r\n                        <div v-if=\"currentUser === comment.userId\" class=\"col-1 p-0 ms-2\">\r\n                            <i class=\"bi bi-trash3 deleteicon align-middle p-1\"></i>\r\n                        </div>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n            \r\n\r\n            <div>\r\n                \r\n            </div>\r\n            <!-- <div v-show=\"!isEditing\" class=\"todocontent\">{{ todo.task }}</div>\r\n            <input ref=\"editingInput\" \r\n                    v-show=\"isEditing\" \r\n                    v-model=\"editingvalue\" \r\n                    @blur=\"sendeditedtodo($event,todo)\" \r\n                    class=\"todocontent\" >\r\n            <div v-if=\"$store.state.userstodo.includes(todo.id)\" class=\"editButton\" @click=\"edittodo(todo)\">\r\n\r\n                <i class=\"bi bi-pencil-square editicon\"></i>\r\n            </div>\r\n            <div v-if=\"$store.state.userstodo.includes(todo.id)\" class=\"deleteButton\" @click=\"deletetodo(todo.id)\">   \r\n                <i class=\"bi bi-trash3 deleteicon\"></i>\r\n            </div> -->\r\n            \r\n           \r\n        </div>\r\n    </li>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name:'SuggestTodoItem',\r\n    props:['comment','currentUser'],\r\n    data(){\r\n        return{\r\n            isEditing:false,\r\n            editingvalue:\"\"\r\n        }\r\n    },\r\n    methods:{\r\n        // deletetodo(id){\r\n        //     this.$store.dispatch('deletetodo',id)\r\n        // },\r\n        // edittodo(todo){\r\n        //     this.isEditing = !this.isEditing\r\n        //     this.editingvalue = todo.task\r\n        //     this.$nextTick(() => {\r\n        //         this.$refs.editingInput.focus();\r\n        //     });\r\n        // },\r\n        // sendeditedtodo(e,todo){\r\n        //     if (todo.task !== e.target.value){\r\n        //         let content = e.target.value\r\n        //         let id = todo.id\r\n        //         this.isEditing=false\r\n        //         this.$store.dispatch('edittodo',{content,id})\r\n        //     }\r\n        //     this.isEditing=false\r\n        // },\r\n        editComment() {\r\n            this.isEditing = !this.isEditing;\r\n            this.editingvalue = this.comment.commentText;\r\n            this.$nextTick(() => {\r\n                this.$refs.editingInput.focus();\r\n            });\r\n        },\r\n        doneEdit(){\r\n            this.isEditing = false;\r\n            if (this.comment.commentText !== this.editingvalue){\r\n                this.sendEditedComment()\r\n            }\r\n            \r\n        },\r\n        sendEditedComment(){\r\n            const updateComment = {\r\n                commentId: this.comment.commentId,\r\n                newValue: this.editingvalue\r\n            }\r\n            this.$store.dispatch('updateComment',updateComment)            \r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    img {\r\n        height: 50px;\r\n    }\r\n    li {\r\n        min-height: 130px;\r\n        list-style-type: none;\r\n    }\r\n    .time {\r\n        font-size: 14px;\r\n    }\r\n    .textArea {\r\n        min-height: 90px;\r\n    }\r\n    .deleteicon:hover{\r\n        background: rgba(0, 0, 0, 0.1);\r\n        border-radius: 0.9rem;\r\n        font-size: 20px;\r\n        color: rgb(239 68 68);\r\n    }\r\n    .editicon:hover{\r\n        background: rgba(0, 0, 0, 0.1);\r\n        border-radius: 0.9rem;\r\n        font-size: 20px;\r\n        color: rgb(5 150 105);\r\n    }\r\n    .bottom-row {\r\n        height: 30px;\r\n    }\r\n    \r\n</style>"],"mappings":"AA0EA;EACAA,IAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,YAAA;MACA,KAAAH,SAAA,SAAAA,SAAA;MACA,KAAAC,YAAA,QAAAG,OAAA,CAAAC,WAAA;MACA,KAAAC,SAAA;QACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,KAAA;MACA;IACA;IACAC,SAAA;MACA,KAAAV,SAAA;MACA,SAAAI,OAAA,CAAAC,WAAA,UAAAJ,YAAA;QACA,KAAAU,iBAAA;MACA;IAEA;IACAA,kBAAA;MACA,MAAAC,aAAA;QACAC,SAAA,OAAAT,OAAA,CAAAS,SAAA;QACAC,QAAA,OAAAb;MACA;MACA,KAAAc,MAAA,CAAAC,QAAA,kBAAAJ,aAAA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}