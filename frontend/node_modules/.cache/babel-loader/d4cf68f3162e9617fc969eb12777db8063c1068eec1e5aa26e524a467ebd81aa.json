{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  name: 'SuggestTodo',\n  data() {\n    return {\n      liked: false,\n      user: ''\n    };\n  },\n  methods: {\n    toggleLike() {\n      this.liked = !this.liked;\n    },\n    addnewtodo(e) {\n      const data = {\n        createtime: new Date(),\n        content: e.target.value,\n        userid: this.user\n      };\n      this.$store.dispatch('SendTodo', data);\n      e.target.value = \"\";\n    },\n    deletetodo(id) {\n      console.log(id);\n      this.$store.dispatch('deletetodo', id);\n    }\n  },\n  computed: {\n    ...mapState(['todo']),\n    unliked() {\n      return !this.liked;\n    }\n  },\n  mounted() {\n    this.$store.dispatch('gettodo');\n    if (localStorage.getItem('userId')) {\n      this.$store.dispatch('getusertodo', localStorage.getItem('userId'));\n      this.user = localStorage.getItem('userId');\n    }\n    console.log(this.$store.state.userstodo);\n  }\n};","map":{"version":3,"names":["mapState","name","data","liked","user","methods","toggleLike","addnewtodo","e","createtime","Date","content","target","value","userid","$store","dispatch","deletetodo","id","console","log","computed","unliked","mounted","localStorage","getItem","state","userstodo"],"sources":["src/components/SuggestTodo.vue"],"sourcesContent":["<template>\r\n    <div class=\"suggestTodo\">\r\n        <h1>給我一些建議 . . .</h1>\r\n        <div class=\"todoinput\">\r\n            <label for=\"todo\">增加項目到我的 TO-DO List . . .</label>\r\n            <input id=\"todo\" type=\"text\" @keydown.enter=\"addnewtodo\">\r\n        </div>\r\n        <div class=\"showlist\">\r\n            <ul>\r\n                <li v-for=\"todo in todo\" :key=todo.id>\r\n                    <div class=\"todocontent\">\r\n                        {{ todo.date }}    {{ todo.task }}\r\n                    </div>\r\n                    <!-- <svg xmlns=\"http://www.w3.org/2000/svg\" \r\n                        width=\"20\" height=\"20\" fill=\"currentColor\" \r\n                        @click=\"toggleLike\"\r\n                        :class=\"{like: liked, unlike:unliked}\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173\r\n                            6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 \r\n                            0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 \r\n                            4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\r\n                    </svg> -->\r\n                    <button v-if=\"$store.state.userstodo.includes(todo.id)\" class=\"deleteButton\" @click=\"deletetodo(todo.id)\">Delete</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n    name:'SuggestTodo',\r\n    data() {\r\n        return {\r\n            liked: false,\r\n            user:''\r\n        };\r\n    },\r\n    methods:{\r\n        toggleLike() {\r\n            this.liked = !this.liked;\r\n        },\r\n        addnewtodo(e){ \r\n            const data = {\r\n                createtime:new Date(),\r\n                content:e.target.value,\r\n                userid:this.user\r\n            }\r\n            this.$store.dispatch('SendTodo',data)\r\n            e.target.value = \"\"\r\n        },\r\n        deletetodo(id){\r\n            console.log(id)\r\n            this.$store.dispatch('deletetodo',id)\r\n        }\r\n    },\r\n    computed:{\r\n        ...mapState(['todo']),\r\n        unliked(){\r\n            return !this.liked\r\n        }\r\n    },\r\n    mounted(){\r\n        this.$store.dispatch('gettodo')\r\n        if(localStorage.getItem('userId')) {\r\n            this.$store.dispatch('getusertodo',localStorage.getItem('userId'))\r\n            this.user = localStorage.getItem('userId')\r\n        }\r\n        console.log(this.$store.state.userstodo)\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    @media (min-width: 768px) {\r\n        .showlist{\r\n            height: 80%;\r\n            overflow-y: scroll;\r\n        }\r\n        .suggestTodo {\r\n            display: flex;\r\n            flex-direction: column;\r\n            width:30vw;\r\n            height: 70%;\r\n            /* text-align: center; */\r\n            background-color:#fff;\r\n            border-radius: 2rem;\r\n            padding: 0 0 0 50px;\r\n            border: 2px solid #ccc;\r\n            box-shadow: 0 0 10px rgba(0,0,0,.1);\r\n        }\r\n    input {\r\n        width: 200px;\r\n        border-radius: 2rem;\r\n        height: 25px;\r\n        opacity: 0.5;\r\n        padding-left: 20px;\r\n        /* box-shadow: 0 0 1px rgba(0,0,0,.1); */\r\n        /* border: none; */\r\n        /* outline: none; */\r\n        /* margin: 1rem 1rem 1rem 0 */\r\n    }\r\n\r\n    ul {\r\n     padding: 0 0 0 20px;\r\n     overflow-y: auto;\r\n    }\r\n\r\n    label[for=\"todo\"] {\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n        margin:0 20px 0 0\r\n\r\n    }\r\n    .todocontent{\r\n        font-size:20px;\r\n        font-weight: 600;\r\n        display:inline-block;\r\n        width:200px\r\n    }\r\n\r\n    .deleteButton{\r\n        /* background-color: rgb(204, 102, 102); */\r\n        border: 2px solid rgb(204, 102, 102);;\r\n        border-radius: 12px;\r\n        height: 30px;\r\n        width: 100px\r\n    }\r\n\r\n    .deleteButton:hover {\r\n       background-color: rgb(204, 102, 102);\r\n    }\r\n\r\n    .like {\r\n        /* fill: white;\r\n        stroke-linecap: round;\r\n        stroke:black; */\r\n    }\r\n\r\n    .unlike {\r\n        fill: white;\r\n        stroke-linecap: round;\r\n        stroke:black;\r\n    }\r\n\r\n\r\n    }\r\n\r\n\r\n    @media (max-width:768px) {\r\n        .showlist{\r\n            height: 70%;\r\n            overflow-y: auto;\r\n        }\r\n        .suggestTodo {\r\n            display: flex;\r\n            flex-direction: column;\r\n            width:70vw;\r\n            height: 70%;\r\n            background-color:#fff;\r\n            border-radius: 2rem;\r\n            padding: 0 0 0 50px;\r\n            border: 2px solid #ccc;\r\n            box-shadow: 0 0 10px rgba(0,0,0,.1);\r\n        }   \r\n        input {\r\n            width: 200px;\r\n            border-radius: 2rem;\r\n            height: 30px;\r\n            opacity: 1;\r\n            padding-left: 20px;\r\n            margin-top: 20px;\r\n        }    \r\n        ul {\r\n            height:100%;\r\n            padding: 0 0 0 20px;\r\n            \r\n        }\r\n        label[for=\"todo\"] {\r\n            font-size: 25px;\r\n            font-weight: 600;\r\n            margin:0 20px 20px 0\r\n\r\n        }\r\n\r\n        .todocontent{\r\n            font-size:30px;\r\n            font-weight: 600;\r\n            display:inline-block;\r\n            width:350px\r\n        }\r\n\r\n        .deleteButton{\r\n            font-size:18px;\r\n            border: 2px solid rgb(204, 102, 102);\r\n            border-radius: 12px;\r\n            height: 40px;\r\n            width: 100px;\r\n            font-weight: 600;\r\n        }\r\n\r\n        .deleteButton:hover {\r\n            background-color: rgb(204, 102, 102);\r\n        }\r\n\r\n        .like {\r\n\r\n        }\r\n\r\n        .unlike {\r\n            fill: white;\r\n            stroke-linecap: round;\r\n            stroke:black;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /* .suggestTodo {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width:30vw;\r\n        height: 70%;\r\n\r\n        background-color:#fff;\r\n        border-radius: 2rem;\r\n        padding: 0 0 0 50px;\r\n        border: 2px solid #ccc;\r\n        box-shadow: 0 0 10px rgba(0,0,0,.1);\r\n    }\r\n    input {\r\n        width: 200px;\r\n        border-radius: 2rem;\r\n        height: 25px;\r\n        opacity: 0.5;\r\n        padding-left: 20px;\r\n\r\n    }\r\n\r\n    ul {\r\n     padding: 0 0 0 20px;\r\n    }\r\n\r\n    label[for=\"todo\"] {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        margin:0 20px 0 0\r\n\r\n    }\r\n    .todocontent{\r\n        font-size:20px;\r\n        font-weight: 600;\r\n        display:inline-block;\r\n        width:200px\r\n    }\r\n\r\n    .deleteButton{\r\n        \r\n        border: 2px solid rgb(204, 102, 102);;\r\n        border-radius: 12px;\r\n        height: 30px;\r\n        width: 100px\r\n    }\r\n\r\n    .deleteButton:hover {\r\n       background-color: rgb(204, 102, 102);\r\n    }\r\n\r\n    .like {\r\n\r\n    }\r\n\r\n    .unlike {\r\n        fill: white;\r\n        stroke-linecap: round;\r\n        stroke:black;\r\n    } */\r\n</style>"],"mappings":"AA8BA,SAAAA,QAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,KAAAH,KAAA,SAAAA,KAAA;IACA;IACAI,WAAAC,CAAA;MACA,MAAAN,IAAA;QACAO,UAAA,MAAAC,IAAA;QACAC,OAAA,EAAAH,CAAA,CAAAI,MAAA,CAAAC,KAAA;QACAC,MAAA,OAAAV;MACA;MACA,KAAAW,MAAA,CAAAC,QAAA,aAAAd,IAAA;MACAM,CAAA,CAAAI,MAAA,CAAAC,KAAA;IACA;IACAI,WAAAC,EAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,EAAA;MACA,KAAAH,MAAA,CAAAC,QAAA,eAAAE,EAAA;IACA;EACA;EACAG,QAAA;IACA,GAAArB,QAAA;IACAsB,QAAA;MACA,aAAAnB,KAAA;IACA;EACA;EACAoB,QAAA;IACA,KAAAR,MAAA,CAAAC,QAAA;IACA,IAAAQ,YAAA,CAAAC,OAAA;MACA,KAAAV,MAAA,CAAAC,QAAA,gBAAAQ,YAAA,CAAAC,OAAA;MACA,KAAArB,IAAA,GAAAoB,YAAA,CAAAC,OAAA;IACA;IACAN,OAAA,CAAAC,GAAA,MAAAL,MAAA,CAAAW,KAAA,CAAAC,SAAA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}